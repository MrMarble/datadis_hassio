[tool.poetry]
name = "datadis_integration"
version = "0.2.3"
description = "Home assistant datadis integration"
authors = ["Alvaro Tinoco <alvarotinocomarmol@gmail.com>"]
license = "MIT"
readme = "README.md"
repository = "https://github.com/mrmarble/datadis_hassio"

[tool.poetry.dependencies]
python = "^3.8"
datadis = "^0.7.3"

[tool.poetry.dev-dependencies]
black = "^21.9b0"
pytest-cov = "^2.12.1"
pytest-asyncio = "^0.15.1"
flakehell = "^0.9.0"
pre-commit = "^2.15.0"
isort = "^5.9.3"
pytest-homeassistant-custom-component = "^0.4.4"
homeassistant = "^2021.9.0b2"
pytest = "^6.2.4"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"


[tool.semantic_release]
version_toml = "pyproject.toml:tool.poetry.version"
upload_to_pypi = false
upload_to_release = false
build_command = false

[tool.coverage.run]
relative_files = true
source = ["custom_components"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "raise NotImplemented()",
    "if __name__ == .__main__.:",
    "main()",
    "parser\\..",
    "argparse\\..",
]
fail_under = 93
show_missing = true

[tool.flakehell]
exclude = ["README.md"]
format = "colored"
max_line_length = 88
show_source = true
whitelist = ".flake8.whitelist"
extended_default_ignore = []

[tool.flakehell.plugins]
flake8-bandit = ["+*", "-S322"]
flake8-bugbear = ["+*"]
flake8-builtins = ["+*"]
flake8-comprehensions = ["+*"]
flake8-darglint = ["+*"]
flake8-docstrings = ["+*"]
flake8-eradicate = ["+*"]
flake8-isort = ["+*"]
flake8-mutable = ["+*"]
flake8-pytest-style = ["+*"]
flake8-spellcheck = ["+*"]
mccabe = ["+*"]
pep8-naming = ["+*"]
pycodestyle = ["+*", "-E402", "-E126", "-W503", "-E203", "-E722"]
pyflakes = ["+*"]
pylint = ["+*", "-C0330", "-C0326"]

[tool.black]
line-length = 88
target-version = ["py38"]
include = "\\.pyi?$"

[isort]
# https://github.com/timothycrosley/isort
# https://github.com/timothycrosley/isort/wiki/isort-Settings
# splits long import on multiple lines indented by 4 spaces
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
line_length = 88
indent = "    "
# by default isort don't check module indexes
not_skip = "__init__.py"
# will group `import x` and `from x import` of the same module.
force_sort_within_sections = true
sections = [
    "FUTURE",
    "STDLIB",
    "INBETWEENS",
    "THIRDPARTY",
    "FIRSTPARTY",
    "LOCALFOLDER",
]
default_section = "THIRDPARTY"
known_first_party = ["custom_components", "tests"]
forced_separate = "tests"
combine_as_imports = true
